# Temporarily for testing
#xwayland disable


####################################################
# Variables

set $mod Mod4
set $home "/home/sakhnik"

set $up l
set $down k
set $left j
set $right semicolon

set $ws1 "1:term"
set $ws2 "2:web"
set $ws3 "3:work"
set $ws4 "4:misc"
set $ws5 "5:other"
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9
set $ws10 10


####################################################
# Startup programs

# Removable media manager
exec udiskie -ans
# Bluetooth device manager
exec blueman-applet
# Wayland notification daemon
exec mako
# Wayland terminal
exec foot

# Gtk applications take 20 seconds to start.
# Alternative suggestion is to run them with GTK_USE_PORTAL=0, but it didn't work for me.
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

# Shutdown displays when idle

exec_always swayidle -w \
    before-sleep 'swaylock -f -c 777777'
    #timeout 300 'swaymsg "output * dpms off"'
    #timeout 330 'swaylock -f -c 777777'
    #resume 'swaymsg "output * dpms on"'

####################################################
# Windows

# Tabbed layout by default
workspace_layout tabbed

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Monospace 12

# Don't use borders when one window per workspace
hide_edge_borders --i3 smart
default_border pixel 4

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod


assign [app_id="chromium"]       $ws2
assign [app_id="firefox"]        $ws2
for_window [app_id="firefox"] inhibit_idle fullscreen
# Handle notifications
for_window [app_id="firefox" title="^$"] floating enable, border none
for_window [app_id="firefox" title="^Firefox$"] floating enable, border none


####################################################
# Keymaps


# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym --to-code $mod+Shift+q kill

# start a program selected with fzf (a program launcher)
bindsym --to-code $mod+d exec foot --title=fzf-launcher "$home/.bin/sway-fzf-launch.sh"
for_window [app_id="foot" title="fzf-launcher"] floating enable, border none

bindsym Control+Shift+1 [class="^.*"] border toggle

# change focus
bindsym --to-code {
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right
}

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym --to-code {
    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right
}

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym --to-code {
    # split in horizontal orientation
    $mod+h split h

    # split in vertical orientation
    $mod+v split v
}

bindsym --to-code {
    # enter fullscreen mode for the focused container
    $mod+f fullscreen toggle

    # change container layout (stacked, tabbed, toggle split)
    $mod+s layout stacking
    $mod+w layout tabbed
    $mod+e layout toggle split
}

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# toggle sticky on a floating window
bindsym $mod+Shift+s sticky toggle
for_window [app_id="mpv"] floating enable, sticky enable, border pixel 5
for_window [class="[vV]lc"] floating enable, sticky enable

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

bindsym --to-code {
    # focus the parent container
    $mod+a focus parent

    # focus the child container
    #$mod+d focus child
}

# switch to workspace
bindsym $mod+1 workspace $ws1; exec [ $(pidof -s foot | wc -l) = 0 ] && foot
bindsym $mod+2 workspace $ws2; exec [ $(pidof -s firefox | wc -l) = 0 ] && firefox
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

bindsym --to-code {
    # reload the configuration file
    $mod+Shift+c reload
    # restart sway inplace (preserves your layout/session, can be used to upgrade sway)
    $mod+Shift+r restart
    # exit sway (logs you out of your session)
    $mod+Shift+e exec "swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your session.' -b 'Yes, exit sway' 'swaymsg exit'"
}

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym --to-code {
        $left resize shrink width 10 px or 10 ppt
        $down resize grow height 10 px or 10 ppt
        $up resize shrink height 10 px or 10 ppt
        $right resize grow width 10 px or 10 ppt
    }

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym --to-code $mod+r mode "resize"

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 0 +4% #increase sound volume
bindsym XF86AudioLowerVolume exec pactl set-sink-volume 0 -3% #decrease sound volume
bindsym XF86AudioMute exec pactl set-sink-mute 0 toggle # mute sound

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec "~/.bin/brillo -A 4"
bindsym XF86MonBrightnessDown exec "~/.bin/brillo -U 3"

# Lock screen manually
bindsym --to-code Control+$mod+l exec swayidle -w \
    timeout 1 'swaymsg "output * dpms off"' \
    timeout 2 'swaylock -f -c 777777' \
    resume 'swaymsg "output * dpms on"; pkill -nx swayidle' \
    before-sleep 'swaylock -f -c 777777'

bindsym --release {
    # Multi-screen screenshots with ImageMagick
    Print exec "~/.bin/i3-printscreen.sh"
    # OSX-like area selection screenshots
    Shift+Print exec "~/.bin/i3-printscreen-select.sh"
    $mod+Print exec "~/.bin/i3-printscreen-focused.sh"
}

# Toggle waybar
bindsym $mod+grave exec killall -USR1 waybar

# Send signal 1 to waybar when changing keyboard layout
bindsym --release Mod1+space exec "pkill --signal SIGRTMIN+1 waybar"

####################################################
# The bar and the inputs

bar {
    swaybar_command waybar
    #status_command py3status -c ~/.config/sway/py3status
    #position top
    #mode hide
    #hidden_state hide
}

output "eDP-1" scale 2

input "1267:123:Elan_Touchpad" {
    tap enabled
    natural_scroll enabled
}

input * xkb_layout "us,ua"
input * xkb_variant "altgr-intl,"
input * xkb_options "grp:alt_space_toggle,lv3:ralt_switch,compose:rctrl-altgr"
input "1:1:AT_Translated_Set_2_keyboard" xkb_model "chromebook"
